---
kind: configuration/grafana
title: "Grafana"
name: default
specification:
  grafana_logs_dir: "/var/log/grafana"
  grafana_data_dir: "/var/lib/grafana"
  grafana_address: "0.0.0.0"
  grafana_port: 3000

  # Should the provisioning be kept synced. If true, previous provisioned objects will be removed if not referenced anymore.
  grafana_provisioning_synced: false
  # External Grafana address. Variable maps to "root_url" in grafana server section
  grafana_url: "https://0.0.0.0:3000"

  # Additional options for grafana "server" section
  # This section WILL omit options for: http_addr, http_port, domain, and root_url, as those settings are set by variables listed before
  grafana_server:
    protocol: https
    enforce_domain: false
    socket: ""
    cert_key: "/etc/grafana/ssl/grafana_key.key"
    cert_file: "/etc/grafana/ssl/grafana_cert.pem"
    enable_gzip: false
    static_root_path: public
    router_logging: false

  # Variables correspond to ones in grafana.ini configuration file
  # Security
  grafana_security:
    admin_user: admin
    admin_password: PASSWORD_TO_CHANGE
  #  secret_key: ""
  #  login_remember_days: 7
  #  cookie_username: grafana_user
  #  cookie_remember_name: grafana_remember
  #  disable_gravatar: true
  #  data_source_proxy_whitelist:

  # Database setup
  grafana_database:
    type: sqlite3
  #  host: 127.0.0.1:3306
  #  name: grafana
  #  user: root
  #  password: ""
  #  url: ""
  #  ssl_mode: disable
  #  path: grafana.db
  #  max_idle_conn: 2
  #  max_open_conn: ""
  #  log_queries: ""

  # Get dashboards from https://grafana.com/dashboards. Only for online mode
  grafana_online_dashboards:
    ## Kafka

    # Kafka Exporter Overview
    # https://grafana.com/grafana/dashboards/7589-kafka-exporter-overview/
    - dashboard_id: 7589
      revision_id: 5
      datasource: Prometheus

    ## Kubernetes

    # k8s Memory namespace
    # https://grafana.com/grafana/dashboards/17386-k8s-memory-namespace/
    - dashboard_id: 17386
      revision_id: 1
      datasource: Prometheus

    # Kubernetes / System / API Server
    # https://grafana.com/grafana/dashboards/15761-kubernetes-system-api-server/
    - dashboard_id: 15761
      revision_id: 13
      datasource: Prometheus

    # Kubernetes / Views / Global
    # https://grafana.com/grafana/dashboards/15757-kubernetes-views-global/
    - dashboard_id: 15757
      revision_id: 30
      datasource: Prometheus

    # Kubernetes / Views / Namespaces
    # https://grafana.com/grafana/dashboards/15758-kubernetes-views-namespaces/
    - dashboard_id: 15758
      revision_id: 25
      datasource: Prometheus

    # Kubernetes / Views / Nodes
    # https://grafana.com/grafana/dashboards/15759-kubernetes-views-nodes/
    - dashboard_id: 15759
      revision_id: 19
      datasource: Prometheus

    # Kubernetes / Views / Pods
    # https://grafana.com/grafana/dashboards/15760-kubernetes-views-pods/
    - dashboard_id: 15760
      revision_id: 20
      datasource: Prometheus

    ## NGINX

    # NGINX Ingress controller
    # https://grafana.com/grafana/dashboards/9614-nginx-ingress-controller/
    - dashboard_id: 9614
      revision_id: 1
      datasource: Prometheus

    ## Node Exporter

    # Node Exporter Dashboard EN 20201010-StarsL.cn
    # https://grafana.com/grafana/dashboards/11074-node-exporter-for-prometheus-dashboard-en-v20201010/
    - dashboard_id: 11074
      revision_id: 9
      datasource: Prometheus

    # Node Exporter Full
    # https://grafana.com/grafana/dashboards/1860-node-exporter-full/
    - dashboard_id: 1860
      revision_id: 31
      datasource: Prometheus

    # Node Exporter Server Metrics
    # https://grafana.com/grafana/dashboards/405-node-exporter-server-metrics/
    - dashboard_id: 405
      revision_id: 8
      datasource: Prometheus

    ## PostgreSQL

    # PostgreSQL Database
    # https://grafana.com/grafana/dashboards/9628-postgresql-database/
    - dashboard_id: 9628
      revision_id: 7
      datasource: Prometheus

    # PostgreSQL Overview
    # https://grafana.com/grafana/dashboards/455-postgres-overview/
    - dashboard_id: 455
      revision_id: 2
      datasource: Prometheus

    # PostgreSQL Overview (Postgres_exporter)
    # https://grafana.com/grafana/dashboards/12273-postgresql-overview-postgres-exporter/
    - dashboard_id: 12273
      revision_id: 4
      datasource: Prometheus

    # PostgreSQL Statistics
    # https://grafana.com/grafana/dashboards/13494-postgresql-statistics/
    - dashboard_id: 13494
      revision_id: 5
      datasource: Prometheus

    ## Prometheus

    # Prometheus 2.0 Overview
    # https://grafana.com/grafana/dashboards/3662-prometheus-2-0-overview/
    - dashboard_id: 3662
      revision_id: 2
      datasource: Prometheus

  # Deployer local folder with dashboard definitions in .json format
  grafana_dashboards_dir: "dashboards" # Replace with your dashboard directory if you have dashboards to include

  # User management and registration
  grafana_welcome_email_on_sign_up: false
  grafana_users:
    allow_sign_up: false
    # allow_org_create: true
    # auto_assign_org: true
    auto_assign_org_role: Viewer
    # login_hint: "email or username"
    default_theme: dark
    # external_manage_link_url: ""
    # external_manage_link_name: ""
    # external_manage_info: ""

  # grafana authentication mechanisms
  grafana_auth: {}
  #  disable_login_form: false
  #  disable_signout_menu: false
  #  anonymous:
  #    org_name: "Main Organization"
  #    org_role: Viewer
  #  ldap:
  #    config_file: "/etc/grafana/ldap.toml"
  #    allow_sign_up: false
  #  basic:
  #    enabled: true

  grafana_ldap: {}
  #  verbose_logging: false
  #  servers:
  #    host: 127.0.0.1
  #    port: 389 # 636 for SSL
  #    use_ssl: false
  #    start_tls: false
  #    ssl_skip_verify: false
  #    root_ca_cert: /path/to/certificate.crt
  #    bind_dn: "cn=admin,dc=grafana,dc=org"
  #    bind_password: grafana
  #    search_filter: "(cn=%s)" # "(sAMAccountName=%s)" on AD
  #    search_base_dns:
  #      - "dc=grafana,dc=org"
  #    group_search_filter: "(&(objectClass=posixGroup)(memberUid=%s))"
  #    group_search_base_dns:
  #      - "ou=groups,dc=grafana,dc=org"
  #    attributes:
  #      name: givenName
  #      surname: sn
  #      username: sAMAccountName
  #      member_of: memberOf
  #      email: mail
  #  group_mappings:
  #    - name: Main Org.
  #      id: 1
  #      groups:
  #        - group_dn: "cn=admins,ou=groups,dc=grafana,dc=org"
  #          org_role: Admin
  #        - group_dn: "cn=editors,ou=groups,dc=grafana,dc=org"
  #          org_role: Editor
  #        - group_dn: "*"
  #          org_role: Viewer
  #    - name: Alternative Org
  #      id: 2
  #      groups:
  #        - group_dn: "cn=alternative_admins,ou=groups,dc=grafana,dc=org"
  #          org_role: Admin

  grafana_session: {}
  #  provider: file
  #  provider_config: "sessions"

  grafana_analytics: {}
  #  reporting_enabled: true
  #  google_analytics_ua_id: ""

  # Set this for mail notifications
  grafana_smtp: {}
  #  host:
  #  user:
  #  password:
  #  from_address:

  # Enable grafana alerting mechanism
  grafana_alerting:
    execute_alerts: true
  #  error_or_timeout: 'alerting'
  #  nodata_or_nullvalues: 'no_data'
  #  concurrent_render_limit: 5

  # Grafana logging configuration
  grafana_log: {}
  # mode: 'console file'
  # level: info

  # Internal grafana metrics system
  grafana_metrics: {}
  #  interval_seconds: 10
  #  graphite:
  #    address: "localhost:2003"
  #    prefix: "prod.grafana.%(instance_name)s"

  # Distributed tracing options
  grafana_tracing: {}
  #  address: "localhost:6831"
  #  always_included_tag: "tag1:value1,tag2:value2"
  #  sampler_type: const
  #  sampler_param: 1

  grafana_snapshots: {}
  #  external_enabled: true
  #  external_snapshot_url: "https://snapshots-origin.raintank.io"
  #  external_snapshot_name: "Publish to snapshot.raintank.io"
  #  snapshot_remove_expired: true
  #  snapshot_TTL_days: 90

  # External image store
  grafana_image_storage: {}
  #  provider: gcs
  #  key_file:
  #  bucket:
  #  path:


  #######
  # Plugins from https://grafana.com/plugins
  grafana_plugins: []
  #  - raintank-worldping-app
  #


  # Alert notification channels to configure
  grafana_alert_notifications: []
  #   - name: "Email Alert"
  #     type: "email"
  #     isDefault: true
  #     settings:
  #       addresses: "example@example.com"

  # Datasources to configure
  grafana_datasources:
    - name: "Prometheus"
      type: "prometheus"
      access: "proxy"
      url: "http://localhost:9090"
      basicAuth: false
      basicAuthUser: ""
      basicAuthPassword: ""
      isDefault: true
      editable: true
      jsonData:
        tlsAuth: false
        tlsAuthWithCACert: false
        tlsSkipVerify: true

  # API keys to configure
  grafana_api_keys: []
  #  - name: "admin"
  #    role: "Admin"
  #  - name: "viewer"
  #    role: "Viewer"
  #  - name: "editor"
  #    role: "Editor"

  # Logging options to configure
  grafana_logging:
    log_rotate: true
    daily_rotate: true
    max_days: 7
