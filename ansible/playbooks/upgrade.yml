---
# Ansible playbook for upgrading common and K8s components

- hosts: all
  become: true
  become_method: sudo
  tasks:
    - import_role:
        name: upgrade
        tasks_from: common

- hosts: filebeat
  become: true
  become_method: sudo
  tasks:
    - import_role:
        name: upgrade
        tasks_from: filebeat
      when:
        - groups.opensearch is defined
        - "'filebeat' in upgrade_components or upgrade_components|length == 0"
  environment:
    KUBECONFIG: "{{ kubeconfig.local }}"

- hosts: grafana
  become: true
  become_method: sudo
  serial: 1
  tasks:
    - include_role:
        name: grafana
        tasks_from: upgrade/main
      when: "'grafana' in upgrade_components or upgrade_components|length == 0"

# === kafka ===

- hosts: zookeeper
  serial: 1
  become: true
  become_method: sudo
  tasks:
    - include_role:
        name: zookeeper
        tasks_from: upgrade/main
      vars: { lock_file: /var/tmp/zookeeper-upgrade-in-progress.flag }
      when: "'zookeeper' in upgrade_components or upgrade_components|length == 0"

- hosts: kafka
  serial: 1
  become: true
  become_method: sudo
  module_defaults:
    shell:
      executable: /bin/bash
  tasks:
    - include_role:
        name: kafka
        tasks_from: upgrade/main
      vars: { lock_file: /var/tmp/kafka-upgrade-in-progress.flag }
      when: "'kafka' in upgrade_components or upgrade_components|length == 0"

- hosts: kafka_exporter
  serial: 1
  become: true
  become_method: sudo
  module_defaults:
    shell:
      executable: /bin/bash
  tasks:
    - include_role:
        name: kafka_exporter
        tasks_from: upgrade/main
      vars: { lock_file: /var/tmp/kafka-exporter-upgrade-in-progress.flag }
      when: "'kafka_exporter' in upgrade_components or upgrade_components|length == 0"

- hosts: node_exporter
  become: true
  become_method: sudo
  tasks:
    - include_role:
        name: node_exporter
        tasks_from: upgrade/main
      when: "'node_exporter' in upgrade_components or upgrade_components|length == 0"
  environment:
    KUBECONFIG: "{{ kubeconfig.local }}"

- hosts: jmx_exporter
  serial: 1
  become: true
  become_method: sudo
  module_defaults:
    shell:
      executable: /bin/bash
  tasks:
    - include_role:
        name: jmx_exporter
        tasks_from: upgrade/main
      vars: { lock_file: /var/tmp/jmx-exporter-upgrade-in-progress.flag }
      when: "'jmx_exporter' in upgrade_components or upgrade_components|length == 0"

- hosts: prometheus
  become: true
  become_method: sudo
  tasks:
    - include_role:
        name: prometheus
        tasks_from: upgrade/main
      when: "'prometheus' in upgrade_components or upgrade_components|length == 0"
