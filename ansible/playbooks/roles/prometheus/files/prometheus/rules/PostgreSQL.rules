# Ansible managed
groups:
- name: PostgreSQL.rules
  rules:
  - alert: PostgresqlDown
    expr: pg_up == 0
    for: 5m
    labels:
      severity: critical
    annotations:
      summary: 'Postgresql down (instance {{ $labels.instance }})'
      description: 'Postgresql instance is down\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}'

  - alert: PostgresqlExporterError
    expr: pg_exporter_last_scrape_error > 0
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: 'Postgresql exporter error (instance {{ $labels.instance }})'
      description: 'Postgresql exporter is showing errors. A query may be buggy in query.yaml\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}'

  - alert: PostgresqlDeadLocks
    expr: rate(pg_stat_database_deadlocks{datname!~'template.*|postgres'}[3m]) > 0
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: 'Postgresql dead locks (instance {{ $labels.instance }})'
      description: 'PostgreSQL has dead-locks\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}'

  - alert: PostgresqlHighRollbackRate
    expr: rate(pg_stat_database_xact_rollback{datname!~'template.*'}[3m]) / rate(pg_stat_database_xact_commit{datname!~'template.*'}[3m]) > 0.02
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: 'Postgresql high rollback rate (instance {{ $labels.instance }})'
      description: 'Ratio of transactions being aborted compared to committed is > 2 %\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}'

  - alert: PostgresqlTooManyLocksAcquired
    expr: ((sum (pg_locks_count)) / (pg_settings_max_locks_per_transaction * pg_settings_max_connections)) > 0.20
    for: 5m
    labels:
      severity: critical
    annotations:
      summary: 'Postgresql too many locks acquired (instance {{ $labels.instance }})'
      description: 'Too many locks acquired on the database. If this alert happens frequently, we may need to increase the postgres setting max_locks_per_transaction.\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}'

  - alert: PostgresNotResponding
    expr: pg_exporter_last_scrape_error == 1
    for: 5m
    labels:
      severity: critical
    annotations:
      summary: 'Postgres server is down'
      description: 'Postgres has not been responding for the past 5 minutes on {{ $labels.instance }}'

  - alert: PostgreSQLCacheHitRatio
    expr: avg(rate(pg_stat_database_blks_hit{datname!~"template.*"}[5m]) / (rate(pg_stat_database_blks_hit{datname!~"template.*"}[5m]) + rate(pg_stat_database_blks_read{datname!~"template.*"}[5m]))) by (datname) < 0.98
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: 'PostgreSQL low cache hit rate on {{ $labels.cluster }} for database {{ $labels.datname }}'
      description: 'PostgreSQL low on cache hit rate on {{ $labels.cluster }} for database {{ $labels.datname }} with a value of {{ $value }}'

  - alert: PostgresqlReplicationLag
    expr: pg_replication_lag > 360 and ON(instance) pg_replication_is_replica == 1
    for: 0m
    labels:
      severity: critical
    annotations:
      summary: Postgresql replication lag (instance {{ $labels.instance }})
      description: "PostgreSQL replication lag is going up (> 6m)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: PostgresSplitBrain
    expr: count(pg_replication_is_replica == 0) BY (environment) > 1
    for: 0m
    labels:
      severity: critical
    annotations:
      summary: Postgresql split brain (instance {{ $labels.instance }})
      description: "Split Brain, too many primary Postgresql databases in read-write mode\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
